name: iOS Build & TestFlight

on:
  push:
    branches: [main, master]
  workflow_dispatch: # Allows manual triggering

jobs:
  build-testflight:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios

      - name: Install Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@latest

      - name: Add iOS target
        run: rustup target add aarch64-apple-ios

      - name: Build frontend
        run: npm run build

      - name: Initialize iOS project
        run: tauri ios init

      - name: Import Apple Certificate
        if: ${{ env.APPLE_CERTIFICATE != '' }}
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        run: |
          echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P $APPLE_CERTIFICATE_PASSWORD -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Build iOS app
        run: tauri ios build --verbose
        env:
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CI: true

      - name: Upload to TestFlight
        if: ${{ env.APPLE_ID != '' }}
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        run: |
          cd src-tauri/gen/apple
          xcrun altool --upload-app --type ios --file "build/ios/norma-ai.ipa" --username "$APPLE_ID" --password "$APPLE_PASSWORD"

      - name: Upload build artifacts (fallback)
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: |
            src-tauri/gen/apple/build/ios/
          retention-days: 30