default_platform(:ios)

platform :ios do
  desc "Build and deploy iOS app to TestFlight"
  lane :beta do
    # Setup CI environment (creates temporary keychain named 'fastlane_tmp_keychain')
    setup_ci if ENV['CI']

    # Import certificate to the keychain created by setup_ci
    import_certificate(
      certificate_path: ENV['CERTIFICATE_PATH'],
      certificate_password: ENV['CERTIFICATE_PASSWORD'],
      keychain_name: "fastlane_tmp_keychain",
      keychain_password: ""
    )

    install_provisioning_profile(
      path: ENV['PROVISIONING_PROFILE_PATH']
    )

    # Update project code signing settings
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "src-tauri/gen/apple/norma-ai.xcodeproj",
      team_id: ENV['APPLE_TEAM_ID'],
      code_sign_identity: "Apple Distribution",
      profile_name: ENV['PROVISIONING_PROFILE_NAME']
    )

    # Patch scheme to force Release configuration for archive builds
    require 'xcodeproj'
    scheme_path = 'src-tauri/gen/apple/norma-ai.xcodeproj/xcshareddata/schemes/norma-ai_iOS.xcscheme'

    if File.exist?(scheme_path)
      scheme = Xcodeproj::XCScheme.new(scheme_path)
      scheme.archive_action.build_configuration = 'release'
      scheme.launch_action.build_configuration = 'release'
      scheme.profile_action.build_configuration = 'release'
      scheme.save_as('src-tauri/gen/apple/norma-ai.xcodeproj', 'norma-ai_iOS', true)
      UI.success("✅ Scheme patched to use Release configuration")
    else
      UI.important("⚠️  Scheme file not found, will rely on configuration parameter")
    end

    # Build the app
    build_app(
      workspace: "src-tauri/gen/apple/norma-ai.xcodeproj/project.xcworkspace",
      scheme: "norma-ai_iOS",
      configuration: "Release",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          "com.nikola.norma-ai" => ENV['PROVISIONING_PROFILE_NAME']
        }
      }
    )

    # Upload to TestFlight
    upload_to_testflight(
      api_key: app_store_connect_api_key(
        key_id: ENV['APPLE_API_KEY_ID'],
        issuer_id: ENV['APPLE_API_ISSUER'],
        key_content: ENV['APPLE_API_KEY'],
        is_key_content_base64: false
      ),
      skip_waiting_for_build_processing: true
    )
  end
end
